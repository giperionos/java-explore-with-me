{
  "openapi": "3.0.1",
  "info": {
    "title": "Main service Chat API",
    "version": "1.0"
  },
  "servers": [
    {
      "description": "Generated server url",
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/users/{userId}/events/{eventId}/chat": {
      "post": {
        "operationId": "createChat",
        "parameters": [
          {
            "description": "id текущего пользователя",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id события",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatDto"
                }
              }
            },
            "description": "Чат найден"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Создание чата инициатором события для его участников",
        "tags": [
          "Private: Работа с чатом инициатором мероприятия"
        ]
      }
    },
    "/users/{userId}/events/{eventId}/chats/{chatId}": {
      "delete": {
        "operationId": "deleteChat",
        "parameters": [
          {
            "description": "id текущего пользователя",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id события",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id чата",
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Чат удален"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Удаление чата инициатором события для его участников",
        "tags": [
          "Private: Работа с чатом инициатором мероприятия"
        ]
      }
    },
    "/users/{userId}/requests/{requestId}/chats/": {
      "get": {
        "operationId": "getChatForParticipition",
        "parameters": [
          {
            "description": "id текущего пользователя",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id запроса на участие",
            "in": "path",
            "name": "requestId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatDto"
                }
              }
            },
            "description": "Чат найден"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Просмотр инофрмации о чате для участника мероприятия",
        "tags": [
          "Private: Работа с чатом участиником мероприятия"
        ]
      }
    },
    "/users/{userId}/chats/{chatId}": {
      "get": {
        "operationId": "getChat",
        "parameters": [
          {
            "description": "id текущего пользователя",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id чата",
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "количество сообщений, которые нужно пропустить для формирования текущего набора",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "description": "количество сообщений в наборе",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageDto"
                  }
                }
              }
            },
            "description": "Сообщения найдены"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Открытие чата для просмотра его сообщений",
        "tags": [
          "Private: Работа пользователя с содержимым чата"
        ]
      }
    },
    "/users/{userId}/chats/{chatId}/messages": {
      "post": {
        "operationId": "addNewMessage",
        "parameters": [
          {
            "description": "id текущего пользователя",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id чата",
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "количество сообщений, которые нужно пропустить для формирования текущего набора",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "description": "количество сообщений в наборе",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMessageDto"
              }
            }
          },
          "description": "текст добавляемого сообщения",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageDto"
                  }
                }
              }
            },
            "description": "Сообщение добавлено"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Написать сообщение в чат",
        "tags": [
          "Private: Работа пользователя с содержимым чата"
        ]
      }
    },
    "/users/{userId}/chats/{chatId}/messages/{messId}": {
      "patch": {
        "operationId": "updateMessage",
        "parameters": [
          {
            "description": "id текущего пользователя",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id чата",
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id сообщения",
            "in": "path",
            "name": "messId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "количество сообщений, которые нужно пропустить для формирования текущего набора",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "description": "количество сообщений в наборе",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMessageDto"
              }
            }
          },
          "description": "текст обновляемого сообщения",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageDto"
                  }
                }
              }
            },
            "description": "Сообщение добавлено"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Изменить свое сообщение в чате",
        "tags": [
          "Private: Работа пользователя с содержимым чата"
        ]
      },
      "delete": {
        "operationId": "deleteMessage",
        "parameters": [
          {
            "description": "id текущего пользователя",
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id чата",
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id сообщения",
            "in": "path",
            "name": "messId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "количество сообщений, которые нужно пропустить для формирования текущего набора",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "description": "количество сообщений в наборе",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageDto"
                  }
                }
              }
            },
            "description": "Сообщение удалено"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Удалить сообщение из чата",
        "tags": [
          "Private: Работа пользователя с содержимым чата"
        ]
      }
    },
    "/admin/chats": {
      "get": {
        "operationId": "getChatListByParams",
        "parameters": [
          {
            "description": "список идентификаторов событий, для которых нужно найти чаты",
            "in": "query",
            "name": "events",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "description": "дата и время, не раньше которых были созданы чаты",
            "in": "query",
            "name": "rangeStart",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "дата и время, не позже которых были созданы чаты",
            "in": "query",
            "name": "rangeEnd",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Вариант выборки: открытые или закрытие, если не пришел - все",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "OPENED",
                "CLOSED"
              ]
            }
          },
          {
            "description": "количество чатов, которые нужно пропустить для формирования текущего набора",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "description": "количество чатов в наборе",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatDto"
                  }
                }
              }
            },
            "description": "Событие найдено"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Просмотр списка чатов",
        "tags": [
          "Admin: Работа с чатом администратором"
        ]
      }
    },
    "/admin/chats/{chatId}": {
      "get": {
        "operationId": "getChatForAdmin",
        "parameters": [
          {
            "description": "id чата",
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "количество сообщений, которые нужно пропустить для формирования текущего набора",
            "in": "query",
            "name": "from",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "description": "количество сообщений в наборе",
            "in": "query",
            "name": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminChatDto"
                }
              }
            },
            "description": "Чат найден"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Открытие чата для просмотра его сообщений",
        "tags": [
          "Admin: Работа с чатом администратором"
        ]
      },
      "patch": {
        "operationId": "updateChatByAdmin",
        "parameters": [
          {
            "description": "id чата",
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Вариант действия: открытые или закрытие чата",
            "in": "query",
            "name": "action",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "OPEN",
                "CLOSE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatDto"
                }
              }
            },
            "description": "Чат найден"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "открытие или закрытие чата по решению администратора",
        "tags": [
          "Admin: Работа с чатом администратором"
        ]
      }
    },
    "/admin/chats/{chatId}/messages/{messId}": {
      "delete": {
        "operationId": "deleteMessageByAdmin",
        "parameters": [
          {
            "description": "id чата",
            "in": "path",
            "name": "chatId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "id сообщения",
            "in": "path",
            "name": "messId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Сообщение удалено"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос составлен с ошибкой"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Не выполнены условия для совершения операции"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "status": "NOT_FOUND",
                  "reason": "The required object was not found.",
                  "message": "Event with id=21 was not found.",
                  "timestamp": "2022-09-07 09:10:50"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Объект не найден"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "status": "CONFLICT",
                  "reason": "Integrity constraint has been violated",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:47:58"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Запрос приводит к нарушению целостности данных"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "status": "INTERNAL_SERVER_ERROR",
                  "reason": "Error occurred",
                  "message": "could not execute statement; SQL [n/a]; constraint [uq_category_name]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement",
                  "timestamp": "2022-09-07 10:23:27"
                },
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            },
            "description": "Внутренняя ошибка сервера"
          }
        },
        "summary": "Удалить сообщение из чата",
        "tags": [
          "Admin: Работа с чатом администратором"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Список стектрейсов или описания ошибок",
            "example": [],
            "items": {
              "type": "string",
              "description": "Список стектрейсов или описания ошибок",
              "example": "[]"
            }
          },
          "message": {
            "type": "string",
            "description": "Сообщение об ошибке",
            "example": "Only pending or canceled events can be changed"
          },
          "reason": {
            "type": "string",
            "description": "Общее описание причины ошибки",
            "example": "For the requested operation the conditions are not met."
          },
          "status": {
            "type": "string",
            "description": "Код статуса HTTP-ответа",
            "example": "FORBIDDEN",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "timestamp": {
            "type": "string",
            "description": "Дата и время когда произошла ошибка (в формате \"yyyy-MM-dd HH:mm:ss\")",
            "example": "2022-06-09 06:27:23"
          }
        },
        "description": "Сведения об ошибке"
      },
      "ChatDto": {
        "required": [
          "id",
          "event",
          "owner",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор",
            "format": "int64",
            "example": 3
          },
          "event": {
            "$ref": "#/components/schemas/EventMiniDto"
          },
          "owner": {
            "$ref": "#/components/schemas/UserShortDto"
          },
          "status": {
            "type": "string",
            "description": "Статус Чата",
            "example": "OPENED",
            "enum": [
              "WAITING",
              "OPENED",
              "CLOSED"
            ]
          }
        },
        "description": "Общая информация о чате"
      },
      "AdminChatDto": {
        "required": [
          "id",
          "event",
          "owner",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор",
            "format": "int64",
            "example": 3
          },
          "event": {
            "$ref": "#/components/schemas/EventMiniDto"
          },
          "owner": {
            "$ref": "#/components/schemas/UserShortDto"
          },
          "status": {
            "type": "string",
            "description": "Статус Чата",
            "example": "OPENED",
            "enum": [
              "WAITING",
              "OPENED",
              "CLOSED"
            ]
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageDto"
            }
          }
        },
        "description": "Общая информация о чате"
      },
      "MessageDto": {
        "required": [
          "id",
          "sendDate",
          "authorName",
          "text"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор",
            "format": "int64",
            "example": 3
          },
          "sendDate": {
            "type": "string",
            "description": "Дата и время на которые сообщения. Дата и время указываются в формате \"yyyy-MM-dd HH:mm:ss\"",
            "example": "2024-12-31 15:10:05"
          },
          "authorName": {
            "type": "string",
            "description": "Имя",
            "example": "Иван Петров"
          },
          "text": {
            "type": "string",
            "description": "Текст сообщения",
            "example": "Всем привет!"
          }
        }
      },
      "NewMessageDto": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Текст сообщения",
            "example": "Всем привет!"
          }
        }
      },
      "UserShortDto": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор",
            "format": "int64",
            "example": 3
          },
          "name": {
            "type": "string",
            "description": "Имя",
            "example": "Фёдоров Матвей"
          }
        },
        "description": "Пользователь (краткая информация)"
      },
      "EventMiniDto": {
        "required": [
          "id",
          "title",
          "eventDate"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор",
            "format": "int64",
            "example": 1
          },
          "eventDate": {
            "type": "string",
            "description": "Дата и время на которые намечено событие (в формате \"yyyy-MM-dd HH:mm:ss\")",
            "example": "2024-12-31 15:10:05"
          },
          "title": {
            "type": "string",
            "description": "Заголовок",
            "example": "Знаменитое шоу 'Летающая кукуруза'"
          }
        },
        "description": "Мини информация о событии",
        "example": {
          "id": 1,
          "eventDate": "2024-03-10 14:30:00",
          "title": "Знаменитое шоу 'Летающая кукуруза'"
        }
      }
    }
  }
}